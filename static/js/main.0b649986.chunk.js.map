{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isСorrectId","some","tab","id","className","map","index","isCurrentTab","classNames","href","onClick","title","find","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAYaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GACd,IAAMC,EAAeT,IAAkBI,EAAIC,GAE3C,OACE,oBACE,UAAQ,MAERC,UAAWI,IAAW,CACpB,YAAcV,IAAkBI,EAAIC,KAC7BH,IAAgBM,IAL3B,SAQE,mBACEG,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAAOH,GAAgBR,EAAcG,IAHhD,SAKGA,EAAIS,SAXFT,EAAIC,WAmBnB,mBAAGC,UAAU,QAAQ,UAAQ,aAA7B,mBACGP,EAAKe,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4Ce,cCxCxChB,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAclB,EAAK,IAAzD,mBAAOmB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,EAAYL,SAGlC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAekB,EAAYb,GAC3BJ,cAAekB,QCxBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0b649986.chunk.js","sourcesContent":["import React from 'react';\n\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: React.Dispatch<React.SetStateAction<Tab>>;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const isСorrectId = tabs.some(tab => tab.id === selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => {\n            const isCurrentTab = selectedTabId === tab.id;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={classNames({\n                  'is-active': (selectedTabId === tab.id)\n                    || (!isСorrectId && !index),\n                })}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => !isCurrentTab && onTabSelected(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <p className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}